#deep-0

meta {
	version = "2011-05-18";
	description = "Freescale MPC555 (all devices)";
	import = "config/CompilerConstants.deep", "config/MPC555-Registermap.deep";
}

sysconst {
	IMB = 0x0;										# Internal Memory Base
	
	SRAMA_BaseAddr = IMB + 0x3F9800;				# Internal SRAM A Base Address
	SRAMA_Size = 0x2800;							# Internal SRAM A Size (10 KiB)
	SRAMB_BaseAddr = SRAMA_BaseAddr + SRAMA_Size;	# Internal SRAM B Base Address
	SRAMB_Size = 0x4000;							# Internal SRAM B Size (16 KiB)
    
	CMFA_BaseAddr = IMB + 0x0;						# Internal Flash A Base Address
	CMFA_Size = 0x40000;							# Internal Flash A Size (256 KiB)
	CMFB_BaseAddr = CMFA_BaseAddr + CMFA_Size;		# Internal Flash B Base Address
	CMFB_Size = 0x30000;							# Internal Flash B Size (192 KiB)
    
    excpCodeBase = IMB;								# Base address for exception code
    excpCodeSize = 0x2000;							# Exception code size
    
	sysTabBaseAddr = IMB + excpCodeSize;			# Place system table behind exception code
	
	stackSize = 0x2000;								# Default stack size
}

memorymap {

	# ===== Internal RAM =====
	device InternalRam {
		attributes = read, write;
		width = 4; # byte
		size = SRAMA_Size + SRAMB_Size;
		base = SRAMA_BaseAddr;
		technology = ram;
	}
	
	segment InternalRam.SysTab {
		base = sysTabBaseAddr;
		attributes = read, write, systab;
	}
	
	segment InternalRam.Constants {
		attributes = read, write, const;
	}
	
	segment InternalRam.Code {
		attributes = read, write, code;
	}
	
	segment InternalRam.Variables {
		attributes = read, write, var;
	}
	

    segment InternalRam.Stack {
      	attributes = read, write, stack;
      	size = stackSize;
      	base = SRAMB_BaseAddr + SRAMB_Size - stackSize ;
    }
	
	# ===== Internal Flash =====
	device InternalFlash {
		attributes = read;
		width = 4; # byte
		size = CMFA_Size + CMFB_Size;
		base = CMFA_BaseAddr;
		technology = flash;
		memorytype = "internal";
		memorysectorarray A {
          base = CMFA_BaseAddr;
          sectorsize = 0x08000;
          nofsectors = 8;
        }
        memorysectorarray B {
          base = CMFB_BaseAddr;
          sectorsize = 0x08000;
          nofsectors = 6;
        }
	}
			
	segment InternalFlash.A {
		base = CMFA_BaseAddr;
		size = CMFA_Size;
	}
	
	segment InternalFlash.B {
		base =  CMFB_BaseAddr;
		size = CMFB_Size;

	}
}